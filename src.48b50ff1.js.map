{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","title","CountdownTimer","targetDate","init","dateNow","setInterval","currentTime","Date","now","deltaTime","getTimeComponents","updateTimer","today","dd","String","getDate","padStart","mm","getMonth","textContent","time","Math","floor","pad","value","timer","selector","startTimerBack"],"mappings":";AAuEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAvEA,IAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,uBAC7BI,MAAOL,SAASC,cAAc,WAG3BK,EAAAA,WACuB,SAAA,EAAA,GAAbC,IAAAA,EAAAA,EAAAA,WAAa,EAAA,KAAA,GACjBA,KAAAA,WAAaA,EAEbC,KAAAA,OACAC,KAAAA,UA0Db,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,iBAvDI,MAAA,WAAiB,IAAA,EAAA,KAEbC,YAAY,WACFC,IAAAA,EAAcC,KAAKC,MACnBC,EAAa,EAAKP,WAAaI,EACH,EAAA,EAAKI,kBAAkBD,GAAlDf,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAG1B,EAAKY,YAAY,CAACjB,KAAAA,EAAMG,MAAAA,EAAOC,KAAAA,EAAMC,KAAAA,KAEtC,OA6CX,CAAA,IAAA,UA1CI,MAAA,WACUa,IAAAA,EAAQ,KAAKV,WACbW,EAAKC,OAAOF,EAAMG,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOF,EAAMM,WAAa,GAAGF,SAAS,EAAG,KAGpDvB,EAAKO,MAAMmB,YAAuBN,SAAAA,OAAAA,EAAMI,KAAAA,OAAAA,EAAxC,YAoCR,CAAA,IAAA,OAjCI,MAAA,WACUX,IAAAA,EAAcC,KAAKC,MACnBC,EAAa,KAAKP,WAAaI,EAC/Bc,EAAO,KAAKV,kBAAkBD,GAC/BE,KAAAA,YAAYS,KA6BzB,CAAA,IAAA,oBA1BI,MAAA,SAAkBA,GAMP,MAAA,CAAC1B,KALK2B,KAAKC,MAAMF,EAAQ,OAKlBvB,MAJA,KAAK0B,IAAIF,KAAKC,MAAOF,EAAQ,MAAyB,OAI/CtB,KAHR,KAAKyB,IAAIF,KAAKC,MAAOF,EAAQ,KAAoB,MAGnCrB,KAFd,KAAKwB,IAAIF,KAAKC,MAAOF,EAAQ,IAAc,SAsBhE,CAAA,IAAA,MAjBI,MAAA,SAAII,GACOV,OAAAA,OAAOU,GAAOR,SAAS,EAAG,OAgBzC,CAAA,IAAA,cAbI,MAAA,SAAuC,GAA1BtB,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAChCN,EAAKC,KAAKyB,YAAiBzB,GAAAA,OAAAA,GAC3BD,EAAKI,MAAMsB,YAAiBtB,GAAAA,OAAAA,GAC5BJ,EAAKK,KAAKqB,YAAiBrB,GAAAA,OAAAA,GAC3BL,EAAKM,KAAKoB,YAAiBpB,GAAAA,OAAAA,OAS/B,EA/DOE,GA0DDwB,EAAQ,IAAIxB,EAAe,CAC7ByB,SAAU,WACVxB,WAAY,IAAIK,KAAK,kBAGzBkB,EAAME","file":"src.48b50ff1.js","sourceRoot":"../src","sourcesContent":["const refs = {\n    days: document.querySelector('[data-value=\"days\"]'),\n    hours: document.querySelector('[data-value=\"hours\"]'),\n    mins: document.querySelector('[data-value=\"mins\"]'),\n    secs: document.querySelector('[data-value=\"secs\"]'),\n    title: document.querySelector('.title')\n }\n \n class CountdownTimer {\n    constructor({targetDate}) {\n        this.targetDate = targetDate;\n\n        this.init();\n        this.dateNow()\n    }\n\n    startTimerBack() {\n\n        setInterval(() => {\n            const currentTime = Date.now()\n            const deltaTime =  this.targetDate - currentTime;\n            const {days, hours, mins, secs} = this.getTimeComponents(deltaTime);\n\n          //  console.log(`${days}:${hours}:${mins}:${secs}`);\n            this.updateTimer({days, hours, mins, secs})\n           \n        }, 1000)\n    }\n\n    dateNow() {\n        const today = this.targetDate;\n        const dd = String(today.getDate()).padStart(2, '0');\n        const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        \n       // document.write(today);\n        refs.title.textContent = `Until ${dd}.${mm} left:`\n    }\n\n    init() {\n        const currentTime = Date.now()\n        const deltaTime =  this.targetDate - currentTime;\n        const time = this.getTimeComponents(deltaTime);\n        this.updateTimer(time);\n    }\n\n    getTimeComponents(time) {\n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    \n        return {days, hours, mins, secs};\n    };\n\n    pad(value) {\n        return String(value).padStart(2, '0')\n    }\n\n    updateTimer({days, hours, mins, secs}) {\n    refs.days.textContent = `${days}`;\n    refs.hours.textContent = `${hours}`;\n    refs.mins.textContent = `${mins}`;\n    refs.secs.textContent = `${secs}`;\n}\n};\n\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Sep 01, 2021'),\n  });\n\ntimer.startTimerBack();\n\n\n\n"]}